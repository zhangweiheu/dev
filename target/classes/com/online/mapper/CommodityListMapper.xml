<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online.mapper.CommodityListMapper" >
  <resultMap id="BaseResultMap" type="com.online.model.CommodityList" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sequence" property="sequence" jdbcType="BIGINT" />
    <result column="commodity_name" property="commodityName" jdbcType="VARCHAR" />
    <result column="catalog_id" property="catalogId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Condition_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Condition_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sequence, commodity_name, catalog_id
  </sql>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.online.model.CommodityListCondition" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_list
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitOffset >= 0" >
       limit ${limitOffset} , ${limitSize}
    </if>
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from commodity_list
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from commodity_list
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCondition" parameterType="com.online.model.CommodityListCondition" >
    delete from commodity_list
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.online.model.CommodityList" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity_list (sequence, commodity_name, catalog_id
      )
    values (#{sequence,jdbcType=BIGINT}, #{commodityName,jdbcType=VARCHAR}, #{catalogId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.online.model.CommodityList" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="commodityName != null" >
        commodity_name,
      </if>
      <if test="catalogId != null" >
        catalog_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sequence != null" >
        #{sequence,jdbcType=BIGINT},
      </if>
      <if test="commodityName != null" >
        #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="catalogId != null" >
        #{catalogId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="com.online.model.CommodityListCondition" resultType="java.lang.Integer" >
    select count(*) from commodity_list
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </select>
  <update id="updateByConditionSelective" parameterType="map" >
    update commodity_list
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=BIGINT},
      </if>
      <if test="record.commodityName != null" >
        commodity_name = #{record.commodityName,jdbcType=VARCHAR},
      </if>
      <if test="record.catalogId != null" >
        catalog_id = #{record.catalogId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByCondition" parameterType="map" >
    update commodity_list
    set id = #{record.id,jdbcType=BIGINT},
      sequence = #{record.sequence,jdbcType=BIGINT},
      commodity_name = #{record.commodityName,jdbcType=VARCHAR},
      catalog_id = #{record.catalogId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByIdSelective" parameterType="com.online.model.CommodityList" >
    update commodity_list
    <set >
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=BIGINT},
      </if>
      <if test="commodityName != null" >
        commodity_name = #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="catalogId != null" >
        catalog_id = #{catalogId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="com.online.model.CommodityList" >
    update commodity_list
    set sequence = #{sequence,jdbcType=BIGINT},
      commodity_name = #{commodityName,jdbcType=VARCHAR},
      catalog_id = #{catalogId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>